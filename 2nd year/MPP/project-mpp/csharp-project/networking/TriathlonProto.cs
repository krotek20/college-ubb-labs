// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: TriathlonProtocol.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Proto {

  /// <summary>Holder for reflection information generated from TriathlonProtocol.proto</summary>
  public static partial class TriathlonProtocolReflection {

    #region Descriptor
    /// <summary>File descriptor for TriathlonProtocol.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TriathlonProtocolReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdUcmlhdGhsb25Qcm90b2NvbC5wcm90bxIFcHJvdG8iIwoHQXRobGV0ZRIK",
            "CgJpZBgBIAEoAxIMCgRuYW1lGAIgASgJIiAKBEdhbWUSCgoCaWQYASABKAMS",
            "DAoEbmFtZRgCIAEoCSJiCgdSZWZlcmVlEgoKAmlkGAEgASgDEhkKBGdhbWUY",
            "AiABKAsyCy5wcm90by5HYW1lEgwKBG5hbWUYAyABKAkSEAoIdXNlcm5hbWUY",
            "BCABKAkSEAoIcGFzc3dvcmQYBSABKAkiXwoGUmVzdWx0EgoKAmlkGAEgASgD",
            "EhkKBGdhbWUYAiABKAsyCy5wcm90by5HYW1lEh8KB2F0aGxldGUYAyABKAsy",
            "Di5wcm90by5BdGhsZXRlEg0KBXZhbHVlGAQgASgCIlMKEUF0aGxldGVHYW1l",
            "UmVzdWx0Eh0KBnJlc3VsdBgBIAEoCzINLnByb3RvLlJlc3VsdBIfCgdhdGhs",
            "ZXRlGAIgASgLMg4ucHJvdG8uQXRobGV0ZSJcCg9TZXRSZXN1bHRQYXJhbXMS",
            "HwoHYXRobGV0ZRgBIAEoCzIOLnByb3RvLkF0aGxldGUSGQoEZ2FtZRgCIAEo",
            "CzILLnByb3RvLkdhbWUSDQoFdmFsdWUYAyABKAIiyQIKEFRyaWF0aGxvblJl",
            "cXVlc3QSKgoEdHlwZRgBIAEoDjIcLnByb3RvLlRyaWF0aGxvblJlcXVlc3Qu",
            "VHlwZRIhCgdyZWZlcmVlGAIgASgLMg4ucHJvdG8uUmVmZXJlZUgAEhAKBmdh",
            "bWVJZBgDIAEoA0gAEigKBnBhcmFtcxgEIAEoCzIWLnByb3RvLlNldFJlc3Vs",
            "dFBhcmFtc0gAIp4BCgRUeXBlEgoKBlVua293bhAAEhIKDkFVVEhFTlRJQ0FU",
            "SU9OEAESCgoGTE9HT1VUEAISFAoQR0VUX0FMTF9BVEhMRVRFUxADEhQKEEdF",
            "VF9SRVNVTFRTX0dBTUUQBBIPCgtHRVRfR0FNRV9JRBAFEh0KGUdFVF9BVEhM",
            "RVRFU19UT1RBTF9QT0lOVFMQBhIOCgpTRVRfUE9JTlRTEAdCCQoHcGF5bG9h",
            "ZCKbBAoRVHJpYXRobG9uUmVzcG9uc2USKwoEdHlwZRgBIAEoDjIdLnByb3Rv",
            "LlRyaWF0aGxvblJlc3BvbnNlLlR5cGUSDQoFZXJyb3IYAiABKAkSIAoIYXRo",
            "bGV0ZXMYAyADKAsyDi5wcm90by5BdGhsZXRlEk4KE2F0aGxldGVzVG90YWxQ",
            "b2ludHMYBCADKAsyMS5wcm90by5UcmlhdGhsb25SZXNwb25zZS5BdGhsZXRl",
            "c1RvdGFsUG9pbnRzRW50cnkSGQoEZ2FtZRgFIAEoCzILLnByb3RvLkdhbWUS",
            "HwoHcmVmZXJlZRgGIAEoCzIOLnByb3RvLlJlZmVyZWUSJQoOcmVzdWx0c0Zv",
            "ckdhbWUYByADKAsyDS5wcm90by5SZXN1bHQSHQoGcmVzdWx0GAggASgLMg0u",
            "cHJvdG8uUmVzdWx0GjoKGEF0aGxldGVzVG90YWxQb2ludHNFbnRyeRILCgNr",
            "ZXkYASABKAkSDQoFdmFsdWUYAiABKAI6AjgBIpkBCgRUeXBlEgsKB1Vua25v",
            "d24QABIGCgJPSxABEgkKBUVSUk9SEAISEQoNVVBEQVRFX1BPSU5UUxADEhUK",
            "EVNFTkRfQUxMX0FUSExFVEVTEAQSFQoRU0VORF9SRVNVTFRTX0dBTUUQBRIQ",
            "CgxTRU5EX0dBTUVfSUQQBhIeChpTRU5EX0FUSExFVEVTX1RPVEFMX1BPSU5U",
            "UxAHQjoKI3RyaWF0aGxvbi5uZXR3b3JrLnByb3RvYnVmZnByb3RvY29sQg5U",
            "cmlhdGhsb25Qcm90b6ICAlRQYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Athlete), global::Proto.Athlete.Parser, new[]{ "Id", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Game), global::Proto.Game.Parser, new[]{ "Id", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Referee), global::Proto.Referee.Parser, new[]{ "Id", "Game", "Name", "Username", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.Result), global::Proto.Result.Parser, new[]{ "Id", "Game", "Athlete", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.AthleteGameResult), global::Proto.AthleteGameResult.Parser, new[]{ "Result", "Athlete" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.SetResultParams), global::Proto.SetResultParams.Parser, new[]{ "Athlete", "Game", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.TriathlonRequest), global::Proto.TriathlonRequest.Parser, new[]{ "Type", "Referee", "GameId", "Params" }, new[]{ "Payload" }, new[]{ typeof(global::Proto.TriathlonRequest.Types.Type) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Proto.TriathlonResponse), global::Proto.TriathlonResponse.Parser, new[]{ "Type", "Error", "Athletes", "AthletesTotalPoints", "Game", "Referee", "ResultsForGame", "Result" }, null, new[]{ typeof(global::Proto.TriathlonResponse.Types.Type) }, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Athlete : pb::IMessage<Athlete>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Athlete> _parser = new pb::MessageParser<Athlete>(() => new Athlete());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Athlete> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.TriathlonProtocolReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Athlete() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Athlete(Athlete other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Athlete Clone() {
      return new Athlete(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Athlete);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Athlete other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Athlete other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Game : pb::IMessage<Game>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Game> _parser = new pb::MessageParser<Game>(() => new Game());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Game> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.TriathlonProtocolReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Game() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Game(Game other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Game Clone() {
      return new Game(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Game);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Game other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Game other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Referee : pb::IMessage<Referee>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Referee> _parser = new pb::MessageParser<Referee>(() => new Referee());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Referee> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.TriathlonProtocolReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Referee() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Referee(Referee other) : this() {
      id_ = other.id_;
      game_ = other.game_ != null ? other.game_.Clone() : null;
      name_ = other.name_;
      username_ = other.username_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Referee Clone() {
      return new Referee(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "game" field.</summary>
    public const int GameFieldNumber = 2;
    private global::Proto.Game game_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.Game Game {
      get { return game_; }
      set {
        game_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 4;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 5;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Referee);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Referee other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Game, other.Game)) return false;
      if (Name != other.Name) return false;
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (game_ != null) hash ^= Game.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (game_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Game);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (game_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Game);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (game_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Game);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Referee other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.game_ != null) {
        if (game_ == null) {
          Game = new global::Proto.Game();
        }
        Game.MergeFrom(other.Game);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            if (game_ == null) {
              Game = new global::Proto.Game();
            }
            input.ReadMessage(Game);
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Username = input.ReadString();
            break;
          }
          case 42: {
            Password = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            if (game_ == null) {
              Game = new global::Proto.Game();
            }
            input.ReadMessage(Game);
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Username = input.ReadString();
            break;
          }
          case 42: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Result : pb::IMessage<Result>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Result> _parser = new pb::MessageParser<Result>(() => new Result());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Result> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.TriathlonProtocolReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Result() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Result(Result other) : this() {
      id_ = other.id_;
      game_ = other.game_ != null ? other.game_.Clone() : null;
      athlete_ = other.athlete_ != null ? other.athlete_.Clone() : null;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Result Clone() {
      return new Result(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "game" field.</summary>
    public const int GameFieldNumber = 2;
    private global::Proto.Game game_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.Game Game {
      get { return game_; }
      set {
        game_ = value;
      }
    }

    /// <summary>Field number for the "athlete" field.</summary>
    public const int AthleteFieldNumber = 3;
    private global::Proto.Athlete athlete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.Athlete Athlete {
      get { return athlete_; }
      set {
        athlete_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 4;
    private float value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Result);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Result other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Game, other.Game)) return false;
      if (!object.Equals(Athlete, other.Athlete)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Value, other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (game_ != null) hash ^= Game.GetHashCode();
      if (athlete_ != null) hash ^= Athlete.GetHashCode();
      if (Value != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Value);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (game_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Game);
      }
      if (athlete_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Athlete);
      }
      if (Value != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (game_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Game);
      }
      if (athlete_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Athlete);
      }
      if (Value != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (game_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Game);
      }
      if (athlete_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Athlete);
      }
      if (Value != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Result other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.game_ != null) {
        if (game_ == null) {
          Game = new global::Proto.Game();
        }
        Game.MergeFrom(other.Game);
      }
      if (other.athlete_ != null) {
        if (athlete_ == null) {
          Athlete = new global::Proto.Athlete();
        }
        Athlete.MergeFrom(other.Athlete);
      }
      if (other.Value != 0F) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            if (game_ == null) {
              Game = new global::Proto.Game();
            }
            input.ReadMessage(Game);
            break;
          }
          case 26: {
            if (athlete_ == null) {
              Athlete = new global::Proto.Athlete();
            }
            input.ReadMessage(Athlete);
            break;
          }
          case 37: {
            Value = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            if (game_ == null) {
              Game = new global::Proto.Game();
            }
            input.ReadMessage(Game);
            break;
          }
          case 26: {
            if (athlete_ == null) {
              Athlete = new global::Proto.Athlete();
            }
            input.ReadMessage(Athlete);
            break;
          }
          case 37: {
            Value = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AthleteGameResult : pb::IMessage<AthleteGameResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AthleteGameResult> _parser = new pb::MessageParser<AthleteGameResult>(() => new AthleteGameResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AthleteGameResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.TriathlonProtocolReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AthleteGameResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AthleteGameResult(AthleteGameResult other) : this() {
      result_ = other.result_ != null ? other.result_.Clone() : null;
      athlete_ = other.athlete_ != null ? other.athlete_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AthleteGameResult Clone() {
      return new AthleteGameResult(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::Proto.Result result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "athlete" field.</summary>
    public const int AthleteFieldNumber = 2;
    private global::Proto.Athlete athlete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.Athlete Athlete {
      get { return athlete_; }
      set {
        athlete_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AthleteGameResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AthleteGameResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Result, other.Result)) return false;
      if (!object.Equals(Athlete, other.Athlete)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (result_ != null) hash ^= Result.GetHashCode();
      if (athlete_ != null) hash ^= Athlete.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (result_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Result);
      }
      if (athlete_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Athlete);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (result_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Result);
      }
      if (athlete_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Athlete);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (athlete_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Athlete);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AthleteGameResult other) {
      if (other == null) {
        return;
      }
      if (other.result_ != null) {
        if (result_ == null) {
          Result = new global::Proto.Result();
        }
        Result.MergeFrom(other.Result);
      }
      if (other.athlete_ != null) {
        if (athlete_ == null) {
          Athlete = new global::Proto.Athlete();
        }
        Athlete.MergeFrom(other.Athlete);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (result_ == null) {
              Result = new global::Proto.Result();
            }
            input.ReadMessage(Result);
            break;
          }
          case 18: {
            if (athlete_ == null) {
              Athlete = new global::Proto.Athlete();
            }
            input.ReadMessage(Athlete);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (result_ == null) {
              Result = new global::Proto.Result();
            }
            input.ReadMessage(Result);
            break;
          }
          case 18: {
            if (athlete_ == null) {
              Athlete = new global::Proto.Athlete();
            }
            input.ReadMessage(Athlete);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SetResultParams : pb::IMessage<SetResultParams>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetResultParams> _parser = new pb::MessageParser<SetResultParams>(() => new SetResultParams());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetResultParams> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.TriathlonProtocolReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetResultParams() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetResultParams(SetResultParams other) : this() {
      athlete_ = other.athlete_ != null ? other.athlete_.Clone() : null;
      game_ = other.game_ != null ? other.game_.Clone() : null;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetResultParams Clone() {
      return new SetResultParams(this);
    }

    /// <summary>Field number for the "athlete" field.</summary>
    public const int AthleteFieldNumber = 1;
    private global::Proto.Athlete athlete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.Athlete Athlete {
      get { return athlete_; }
      set {
        athlete_ = value;
      }
    }

    /// <summary>Field number for the "game" field.</summary>
    public const int GameFieldNumber = 2;
    private global::Proto.Game game_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.Game Game {
      get { return game_; }
      set {
        game_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 3;
    private float value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetResultParams);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetResultParams other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Athlete, other.Athlete)) return false;
      if (!object.Equals(Game, other.Game)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Value, other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (athlete_ != null) hash ^= Athlete.GetHashCode();
      if (game_ != null) hash ^= Game.GetHashCode();
      if (Value != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Value);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (athlete_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Athlete);
      }
      if (game_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Game);
      }
      if (Value != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (athlete_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Athlete);
      }
      if (game_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Game);
      }
      if (Value != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (athlete_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Athlete);
      }
      if (game_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Game);
      }
      if (Value != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetResultParams other) {
      if (other == null) {
        return;
      }
      if (other.athlete_ != null) {
        if (athlete_ == null) {
          Athlete = new global::Proto.Athlete();
        }
        Athlete.MergeFrom(other.Athlete);
      }
      if (other.game_ != null) {
        if (game_ == null) {
          Game = new global::Proto.Game();
        }
        Game.MergeFrom(other.Game);
      }
      if (other.Value != 0F) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (athlete_ == null) {
              Athlete = new global::Proto.Athlete();
            }
            input.ReadMessage(Athlete);
            break;
          }
          case 18: {
            if (game_ == null) {
              Game = new global::Proto.Game();
            }
            input.ReadMessage(Game);
            break;
          }
          case 29: {
            Value = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (athlete_ == null) {
              Athlete = new global::Proto.Athlete();
            }
            input.ReadMessage(Athlete);
            break;
          }
          case 18: {
            if (game_ == null) {
              Game = new global::Proto.Game();
            }
            input.ReadMessage(Game);
            break;
          }
          case 29: {
            Value = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TriathlonRequest : pb::IMessage<TriathlonRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TriathlonRequest> _parser = new pb::MessageParser<TriathlonRequest>(() => new TriathlonRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TriathlonRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.TriathlonProtocolReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriathlonRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriathlonRequest(TriathlonRequest other) : this() {
      type_ = other.type_;
      switch (other.PayloadCase) {
        case PayloadOneofCase.Referee:
          Referee = other.Referee.Clone();
          break;
        case PayloadOneofCase.GameId:
          GameId = other.GameId;
          break;
        case PayloadOneofCase.Params:
          Params = other.Params.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriathlonRequest Clone() {
      return new TriathlonRequest(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Proto.TriathlonRequest.Types.Type type_ = global::Proto.TriathlonRequest.Types.Type.Unkown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.TriathlonRequest.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "referee" field.</summary>
    public const int RefereeFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.Referee Referee {
      get { return payloadCase_ == PayloadOneofCase.Referee ? (global::Proto.Referee) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Referee;
      }
    }

    /// <summary>Field number for the "gameId" field.</summary>
    public const int GameIdFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long GameId {
      get { return payloadCase_ == PayloadOneofCase.GameId ? (long) payload_ : 0L; }
      set {
        payload_ = value;
        payloadCase_ = PayloadOneofCase.GameId;
      }
    }

    /// <summary>Field number for the "params" field.</summary>
    public const int ParamsFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.SetResultParams Params {
      get { return payloadCase_ == PayloadOneofCase.Params ? (global::Proto.SetResultParams) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Params;
      }
    }

    private object payload_;
    /// <summary>Enum of possible cases for the "payload" oneof.</summary>
    public enum PayloadOneofCase {
      None = 0,
      Referee = 2,
      GameId = 3,
      Params = 4,
    }
    private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadOneofCase PayloadCase {
      get { return payloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPayload() {
      payloadCase_ = PayloadOneofCase.None;
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TriathlonRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TriathlonRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(Referee, other.Referee)) return false;
      if (GameId != other.GameId) return false;
      if (!object.Equals(Params, other.Params)) return false;
      if (PayloadCase != other.PayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Proto.TriathlonRequest.Types.Type.Unkown) hash ^= Type.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Referee) hash ^= Referee.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GameId) hash ^= GameId.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Params) hash ^= Params.GetHashCode();
      hash ^= (int) payloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::Proto.TriathlonRequest.Types.Type.Unkown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (payloadCase_ == PayloadOneofCase.Referee) {
        output.WriteRawTag(18);
        output.WriteMessage(Referee);
      }
      if (payloadCase_ == PayloadOneofCase.GameId) {
        output.WriteRawTag(24);
        output.WriteInt64(GameId);
      }
      if (payloadCase_ == PayloadOneofCase.Params) {
        output.WriteRawTag(34);
        output.WriteMessage(Params);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::Proto.TriathlonRequest.Types.Type.Unkown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (payloadCase_ == PayloadOneofCase.Referee) {
        output.WriteRawTag(18);
        output.WriteMessage(Referee);
      }
      if (payloadCase_ == PayloadOneofCase.GameId) {
        output.WriteRawTag(24);
        output.WriteInt64(GameId);
      }
      if (payloadCase_ == PayloadOneofCase.Params) {
        output.WriteRawTag(34);
        output.WriteMessage(Params);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Proto.TriathlonRequest.Types.Type.Unkown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (payloadCase_ == PayloadOneofCase.Referee) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Referee);
      }
      if (payloadCase_ == PayloadOneofCase.GameId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(GameId);
      }
      if (payloadCase_ == PayloadOneofCase.Params) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Params);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TriathlonRequest other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Proto.TriathlonRequest.Types.Type.Unkown) {
        Type = other.Type;
      }
      switch (other.PayloadCase) {
        case PayloadOneofCase.Referee:
          if (Referee == null) {
            Referee = new global::Proto.Referee();
          }
          Referee.MergeFrom(other.Referee);
          break;
        case PayloadOneofCase.GameId:
          GameId = other.GameId;
          break;
        case PayloadOneofCase.Params:
          if (Params == null) {
            Params = new global::Proto.SetResultParams();
          }
          Params.MergeFrom(other.Params);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Proto.TriathlonRequest.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            global::Proto.Referee subBuilder = new global::Proto.Referee();
            if (payloadCase_ == PayloadOneofCase.Referee) {
              subBuilder.MergeFrom(Referee);
            }
            input.ReadMessage(subBuilder);
            Referee = subBuilder;
            break;
          }
          case 24: {
            GameId = input.ReadInt64();
            break;
          }
          case 34: {
            global::Proto.SetResultParams subBuilder = new global::Proto.SetResultParams();
            if (payloadCase_ == PayloadOneofCase.Params) {
              subBuilder.MergeFrom(Params);
            }
            input.ReadMessage(subBuilder);
            Params = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Proto.TriathlonRequest.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            global::Proto.Referee subBuilder = new global::Proto.Referee();
            if (payloadCase_ == PayloadOneofCase.Referee) {
              subBuilder.MergeFrom(Referee);
            }
            input.ReadMessage(subBuilder);
            Referee = subBuilder;
            break;
          }
          case 24: {
            GameId = input.ReadInt64();
            break;
          }
          case 34: {
            global::Proto.SetResultParams subBuilder = new global::Proto.SetResultParams();
            if (payloadCase_ == PayloadOneofCase.Params) {
              subBuilder.MergeFrom(Params);
            }
            input.ReadMessage(subBuilder);
            Params = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the TriathlonRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("Unkown")] Unkown = 0,
        [pbr::OriginalName("AUTHENTICATION")] Authentication = 1,
        [pbr::OriginalName("LOGOUT")] Logout = 2,
        [pbr::OriginalName("GET_ALL_ATHLETES")] GetAllAthletes = 3,
        [pbr::OriginalName("GET_RESULTS_GAME")] GetResultsGame = 4,
        [pbr::OriginalName("GET_GAME_ID")] GetGameId = 5,
        [pbr::OriginalName("GET_ATHLETES_TOTAL_POINTS")] GetAthletesTotalPoints = 6,
        [pbr::OriginalName("SET_POINTS")] SetPoints = 7,
      }

    }
    #endregion

  }

  public sealed partial class TriathlonResponse : pb::IMessage<TriathlonResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TriathlonResponse> _parser = new pb::MessageParser<TriathlonResponse>(() => new TriathlonResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TriathlonResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Proto.TriathlonProtocolReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriathlonResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriathlonResponse(TriathlonResponse other) : this() {
      type_ = other.type_;
      error_ = other.error_;
      athletes_ = other.athletes_.Clone();
      athletesTotalPoints_ = other.athletesTotalPoints_.Clone();
      game_ = other.game_ != null ? other.game_.Clone() : null;
      referee_ = other.referee_ != null ? other.referee_.Clone() : null;
      resultsForGame_ = other.resultsForGame_.Clone();
      result_ = other.result_ != null ? other.result_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriathlonResponse Clone() {
      return new TriathlonResponse(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Proto.TriathlonResponse.Types.Type type_ = global::Proto.TriathlonResponse.Types.Type.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.TriathlonResponse.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 2;
    private string error_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error {
      get { return error_; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "athletes" field.</summary>
    public const int AthletesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Proto.Athlete> _repeated_athletes_codec
        = pb::FieldCodec.ForMessage(26, global::Proto.Athlete.Parser);
    private readonly pbc::RepeatedField<global::Proto.Athlete> athletes_ = new pbc::RepeatedField<global::Proto.Athlete>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.Athlete> Athletes {
      get { return athletes_; }
    }

    /// <summary>Field number for the "athletesTotalPoints" field.</summary>
    public const int AthletesTotalPointsFieldNumber = 4;
    private static readonly pbc::MapField<string, float>.Codec _map_athletesTotalPoints_codec
        = new pbc::MapField<string, float>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForFloat(21, 0F), 34);
    private readonly pbc::MapField<string, float> athletesTotalPoints_ = new pbc::MapField<string, float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, float> AthletesTotalPoints {
      get { return athletesTotalPoints_; }
    }

    /// <summary>Field number for the "game" field.</summary>
    public const int GameFieldNumber = 5;
    private global::Proto.Game game_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.Game Game {
      get { return game_; }
      set {
        game_ = value;
      }
    }

    /// <summary>Field number for the "referee" field.</summary>
    public const int RefereeFieldNumber = 6;
    private global::Proto.Referee referee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.Referee Referee {
      get { return referee_; }
      set {
        referee_ = value;
      }
    }

    /// <summary>Field number for the "resultsForGame" field.</summary>
    public const int ResultsForGameFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Proto.Result> _repeated_resultsForGame_codec
        = pb::FieldCodec.ForMessage(58, global::Proto.Result.Parser);
    private readonly pbc::RepeatedField<global::Proto.Result> resultsForGame_ = new pbc::RepeatedField<global::Proto.Result>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Proto.Result> ResultsForGame {
      get { return resultsForGame_; }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 8;
    private global::Proto.Result result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Proto.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TriathlonResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TriathlonResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Error != other.Error) return false;
      if(!athletes_.Equals(other.athletes_)) return false;
      if (!AthletesTotalPoints.Equals(other.AthletesTotalPoints)) return false;
      if (!object.Equals(Game, other.Game)) return false;
      if (!object.Equals(Referee, other.Referee)) return false;
      if(!resultsForGame_.Equals(other.resultsForGame_)) return false;
      if (!object.Equals(Result, other.Result)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Proto.TriathlonResponse.Types.Type.Unknown) hash ^= Type.GetHashCode();
      if (Error.Length != 0) hash ^= Error.GetHashCode();
      hash ^= athletes_.GetHashCode();
      hash ^= AthletesTotalPoints.GetHashCode();
      if (game_ != null) hash ^= Game.GetHashCode();
      if (referee_ != null) hash ^= Referee.GetHashCode();
      hash ^= resultsForGame_.GetHashCode();
      if (result_ != null) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::Proto.TriathlonResponse.Types.Type.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Error);
      }
      athletes_.WriteTo(output, _repeated_athletes_codec);
      athletesTotalPoints_.WriteTo(output, _map_athletesTotalPoints_codec);
      if (game_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Game);
      }
      if (referee_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Referee);
      }
      resultsForGame_.WriteTo(output, _repeated_resultsForGame_codec);
      if (result_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::Proto.TriathlonResponse.Types.Type.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Error);
      }
      athletes_.WriteTo(ref output, _repeated_athletes_codec);
      athletesTotalPoints_.WriteTo(ref output, _map_athletesTotalPoints_codec);
      if (game_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Game);
      }
      if (referee_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Referee);
      }
      resultsForGame_.WriteTo(ref output, _repeated_resultsForGame_codec);
      if (result_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Proto.TriathlonResponse.Types.Type.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Error.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      size += athletes_.CalculateSize(_repeated_athletes_codec);
      size += athletesTotalPoints_.CalculateSize(_map_athletesTotalPoints_codec);
      if (game_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Game);
      }
      if (referee_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Referee);
      }
      size += resultsForGame_.CalculateSize(_repeated_resultsForGame_codec);
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TriathlonResponse other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Proto.TriathlonResponse.Types.Type.Unknown) {
        Type = other.Type;
      }
      if (other.Error.Length != 0) {
        Error = other.Error;
      }
      athletes_.Add(other.athletes_);
      athletesTotalPoints_.Add(other.athletesTotalPoints_);
      if (other.game_ != null) {
        if (game_ == null) {
          Game = new global::Proto.Game();
        }
        Game.MergeFrom(other.Game);
      }
      if (other.referee_ != null) {
        if (referee_ == null) {
          Referee = new global::Proto.Referee();
        }
        Referee.MergeFrom(other.Referee);
      }
      resultsForGame_.Add(other.resultsForGame_);
      if (other.result_ != null) {
        if (result_ == null) {
          Result = new global::Proto.Result();
        }
        Result.MergeFrom(other.Result);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Proto.TriathlonResponse.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            Error = input.ReadString();
            break;
          }
          case 26: {
            athletes_.AddEntriesFrom(input, _repeated_athletes_codec);
            break;
          }
          case 34: {
            athletesTotalPoints_.AddEntriesFrom(input, _map_athletesTotalPoints_codec);
            break;
          }
          case 42: {
            if (game_ == null) {
              Game = new global::Proto.Game();
            }
            input.ReadMessage(Game);
            break;
          }
          case 50: {
            if (referee_ == null) {
              Referee = new global::Proto.Referee();
            }
            input.ReadMessage(Referee);
            break;
          }
          case 58: {
            resultsForGame_.AddEntriesFrom(input, _repeated_resultsForGame_codec);
            break;
          }
          case 66: {
            if (result_ == null) {
              Result = new global::Proto.Result();
            }
            input.ReadMessage(Result);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Proto.TriathlonResponse.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            Error = input.ReadString();
            break;
          }
          case 26: {
            athletes_.AddEntriesFrom(ref input, _repeated_athletes_codec);
            break;
          }
          case 34: {
            athletesTotalPoints_.AddEntriesFrom(ref input, _map_athletesTotalPoints_codec);
            break;
          }
          case 42: {
            if (game_ == null) {
              Game = new global::Proto.Game();
            }
            input.ReadMessage(Game);
            break;
          }
          case 50: {
            if (referee_ == null) {
              Referee = new global::Proto.Referee();
            }
            input.ReadMessage(Referee);
            break;
          }
          case 58: {
            resultsForGame_.AddEntriesFrom(ref input, _repeated_resultsForGame_codec);
            break;
          }
          case 66: {
            if (result_ == null) {
              Result = new global::Proto.Result();
            }
            input.ReadMessage(Result);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the TriathlonResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("Unknown")] Unknown = 0,
        [pbr::OriginalName("OK")] Ok = 1,
        [pbr::OriginalName("ERROR")] Error = 2,
        [pbr::OriginalName("UPDATE_POINTS")] UpdatePoints = 3,
        [pbr::OriginalName("SEND_ALL_ATHLETES")] SendAllAthletes = 4,
        [pbr::OriginalName("SEND_RESULTS_GAME")] SendResultsGame = 5,
        [pbr::OriginalName("SEND_GAME_ID")] SendGameId = 6,
        [pbr::OriginalName("SEND_ATHLETES_TOTAL_POINTS")] SendAthletesTotalPoints = 7,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
